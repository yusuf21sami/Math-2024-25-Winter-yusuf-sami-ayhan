## Tasks related to equations of planes in space

**Visualize each task.** - Python, GeoGebra, Wolfram Alpha, ...

* The plane passes through points $A(1, 2, 3)$, $B(3, 4, 5)$, and $C(2, 1, 4)$. Find the equation of the plane.
* The plane passes through point $A(1, 2, 3)$ and is parallel to the plane $2x + 3y + 4z = 5$. Find the equation of the plane.
* The plane passes through point $A(1, 2, 3)$ and is perpendicular to the normal vector $\vec{n} = [2, 3, 4]$. Find the equation of the plane.
* We have two planes $2x + 3y + 4z = 5$ and $3x + 4y + 2z = 6$. Find the line of intersection of these planes.
* Write the equation of the plane passing through point $A(1, 2, 3)$ and parallel to vectors $\vec{v_1} = [1, 0, 1]$ and $\vec{v_2} = [0, 1, -1]$.
* We have the plane $2x + 3y + 4z = 5$. Find an example of a plane parallel and perpendicular to it.
* We have the plane $2x + 3y + 4z = 5$ and point $A(1, 2, 3)$. Find the distance from point $A$ to this plane.
* The plane intersects the coordinate axes at points $A(2, 0, 0)$, $B(0, 3, 0)$, and $C(0, 0, 4)$. Find the equation of the plane.
* Calculate the angle between the plane $x + y + z = 1$ and the plane $x = 0$ (i.e., the $yz$ plane).
* Find the vector perpendicular to the plane $x + y + z = 1$.

* ##ex
* import sympy as sp

# Symbols
x, y, z = sp.symbols('x y z')

# 1. Plane through points A(1, 2, 3), B(3, 4, 5), C(2, 1, 4)
A, B, C = sp.Matrix([1, 2, 3]), sp.Matrix([3, 4, 5]), sp.Matrix([2, 1, 4])
AB, AC = B - A, C - A
normal_vector = AB.cross(AC)
d = -normal_vector.dot(A)
plane1 = normal_vector[0]*x + normal_vector[1]*y + normal_vector[2]*z + d
print("Plane through A, B, C:", plane1)

# 2. Plane through A(1, 2, 3) parallel to 2x + 3y + 4z = 5
normal_vector2 = sp.Matrix([2, 3, 4])
d = -normal_vector2.dot(sp.Matrix([1, 2, 3]))
plane2 = normal_vector2[0]*x + normal_vector2[1]*y + normal_vector2[2]*z + d
print("Plane through A parallel to given plane:", plane2)

# 3. Plane through A(1, 2, 3) perpendicular to n = [2, 3, 4]
plane3 = 2*x + 3*y + 4*z - (2*1 + 3*2 + 4*3)
print("Plane perpendicular to n:", plane3)

# 4. Line of intersection of two planes
plane_eq1 = 2*x + 3*y + 4*z - 5
plane_eq2 = 3*x + 4*y + 2*z - 6
line_intersection = sp.linsolve([plane_eq1, plane_eq2], (y, z))
print("Line of intersection of planes:", line_intersection)

# 5. Plane through A(1, 2, 3) parallel to vectors v1 = [1, 0, 1] and v2 = [0, 1, -1]
v1, v2 = sp.Matrix([1, 0, 1]), sp.Matrix([0, 1, -1])
normal_vector5 = v1.cross(v2)
d = -normal_vector5.dot(A)
plane5 = normal_vector5[0]*x + normal_vector5[1]*y + normal_vector5[2]*z + d
print("Plane parallel to v1 and v2:", plane5)

# 6. Parallel and perpendicular planes to 2x + 3y + 4z = 5
parallel_plane = 2*x + 3*y + 4*z - 10  # Different constant
perpendicular_plane = x + y + z  # Changing normal vector
print("Parallel plane:", parallel_plane)
print("Perpendicular plane:", perpendicular_plane)

# 7. Distance from A(1, 2, 3) to plane 2x + 3y + 4z = 5
point_A = sp.Matrix([1, 2, 3])
plane_normal = sp.Matrix([2, 3, 4])
distance = abs(2*1 + 3*2 + 4*3 - 5) / plane_normal.norm()
print("Distance from A to plane:", distance)

# 8. Plane through A(2, 0, 0), B(0, 3, 0), C(0, 0, 4)
A, B, C = sp.Matrix([2, 0, 0]), sp.Matrix([0, 3, 0]), sp.Matrix([0, 0, 4])
AB, AC = B - A, C - A
normal_vector8 = AB.cross(AC)
d = -normal_vector8.dot(A)
plane8 = normal_vector8[0]*x + normal_vector8[1]*y + normal_vector8[2]*z + d
print("Plane through A, B, C:", plane8)

# 9. Angle between planes x + y + z = 1 and x = 0
normal1 = sp.Matrix([1, 1, 1])
normal2 = sp.Matrix([1, 0, 0])
angle = sp.acos(normal1.dot(normal2) / (normal1.norm() * normal2.norm()))
print("Angle between planes:", sp.deg(angle))

# 10. Vector perpendicular to x + y + z = 1
perpendicular_vector = sp.Matrix([1, 1, 1])  # Coefficients of the plane
print("Vector perpendicular to the plane:", perpendicular_vector)
